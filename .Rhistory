xlab('Spring 2020 Dummy') +
ylab('Percent Finishing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggPass <- ggpredict(pass_poisson, terms = "Term_20203")
pggPass <- plot(ggPass) +
xlab('Spring 2020 Dummy') +
ylab('Percent Passing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggA <- ggpredict(a_poisson, terms = "Term_20203")
pggA <- plot(ggA) +
xlab('Spring 2020 Dummy') +
ylab('Percent Earning A') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
cowplot::plot_grid(pggFinish,pggPass,pggA, labels = c('A','B','C'))
sjPlot::plot_model(fit, type = "pred", terms = "Term_20203")
sjPlot::plot_model(finish_poisson, type = "pred", terms = "Term_20203")
ggFinish <- ggpredict(finish_poisson,   "Term_20203")
pggFinish <- plot(ggFinish) +
xlab('Spring 2020 Dummy') +
ylab('Percent Finishing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggPass <- ggpredict(pass_poisson, terms = "Term_20203")
pggPass <- plot(ggPass) +
xlab('Spring 2020 Dummy') +
ylab('Percent Passing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggA <- ggpredict(a_poisson, terms = "Term_20203")
pggA <- plot(ggA) +
xlab('Spring 2020 Dummy') +
ylab('Percent Earning A') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
cowplot::plot_grid(pggFinish,pggPass,pggA, labels = c('A','B','C'))
stargazer(pp,fp,pa, title = "Poisson Regression Results", align = TRUE, out = 'result.html', no.space=TRUE, single.row=TRUE,
column.labels=c("Percent Passing","Percent Finishing","Percent Earning A"), model.numbers=FALSE)
options(knitr.kable.NA = '')
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
col.names = linebreak(c("Instructor",
"Term",
"Grade \n(A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade \n(PASS/FAIL/W)"
), align = "c"))
options(knitr.kable.NA = '')
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c"))
stargazer(summary(dat) )
stargazer(summary(dat))
stargazer(dat)
View(dat)
flextable::flextable(summary(dat))
summary(dat)
summary(dat) %>% kable() %>% flextable::flextable()
summary(dat) %>% as.tibble()
summary(dat) %>% as.table()
summary(dat) %>% as.table() %>% flextable::flextable()
summary(dat) %>% as.table() %>% as.data.frame()
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c"),out = summary.html
)
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c"),out = 'summary.html'
)
options(knitr.kable.NA = '')
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
out = 'summary.html',
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c")
)
summary.factor(dat)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
set.seed(4798)
dat <- read_excel("Agriculture and Forestry Grades by Instructor and Course - Summer 2017 thru Spring 2020.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
dat$Instructor <- dat$Instructor %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
dat$ID <- dat$ID %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
percent_grade <- dat %>%
count(Term, Grade) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup()
percent_pfw <- dat %>%
count(Term, pfw) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup() %>%
filter(pfw == "PASS" | pfw == "FAIL" | pfw == "W")
p <- percent_grade %>%
ggplot(aes(x = Grade, y = Percent, fill = Term)) +
geom_bar(stat = "identity", position = "dodge")+
theme(legend.position="top")
#  cowplot::theme_cowplot(font_size = 12) +
inset <- ggplot(percent_pfw, aes(x = pfw, y= Percent, fill = Term)) +
geom_bar(stat = "identity", position = "dodge") +
cowplot::theme_cowplot(font_size = 12) +
theme(legend.position = "none") +
xlab('') +
ylab('')
ggdraw(p +  theme_half_open(12)) +
draw_plot(inset, .35, .45, .5, .5) +
draw_plot_label(
c("A", "B"),
c(0, 0.35),
c(1, 0.95),
size = 12
)
# +
options(knitr.kable.NA = '')
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
out = 'summary.html',
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c")
)
View(dat)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
set.seed(4798)
dat <- read_excel("Agriculture and Forestry Grades by Instructor and Course - Summer 2017 thru Spring 2020.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
dat$Instructor <- dat$Instructor %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
View(dat)
View(dat)
View(dat)
View(dat)
dat <- dat %>%
filter(ID != "FOR480")
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
set.seed(4798)
dat <- read_excel("Agriculture and Forestry Grades by Instructor and Course - Summer 2017 thru Spring 2020.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
dat$Instructor <- dat$Instructor %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
dat <- dat %>%
filter(ID != "FOR480")
percent_grade <- dat %>%
count(Term, Grade) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup()
percent_pfw <- dat %>%
count(Term, pfw) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup() %>%
filter(pfw == "PASS" | pfw == "FAIL" | pfw == "W")
p <- percent_grade %>%
ggplot(aes(x = Grade, y = Percent, fill = Term)) +
geom_bar(stat = "identity", position = "dodge")+
theme(legend.position="top")
#  cowplot::theme_cowplot(font_size = 12) +
inset <- ggplot(percent_pfw, aes(x = pfw, y= Percent, fill = Term)) +
geom_bar(stat = "identity", position = "dodge") +
cowplot::theme_cowplot(font_size = 12) +
theme(legend.position = "none") +
xlab('') +
ylab('')
ggdraw(p +  theme_half_open(12)) +
draw_plot(inset, .35, .45, .5, .5) +
draw_plot_label(
c("A", "B"),
c(0, 0.35),
c(1, 0.95),
size = 12
)
# +
options(knitr.kable.NA = '')
summary(dat) %>%
kable(caption = "Counts of Variable Observations",
out = 'summary.html',
col.names = linebreak(c("Instructor",
"Term",
"Grade (A-F,S,W)",
"Course",
"Upper-Level Course",
"Grade (PASS/FAIL/W)"
), align = "c")
)
d2 <- dat %>%
fastDummies::dummy_cols() %>%
group_by(Instructor,Term,ID,Upper)%>%
summarise(PASSING = sum(Grade_A,Grade_B,Grade_C,Grade_S),
FAILING = sum(Grade_D,Grade_F),
FINISHING = sum(pfw_PASS,pfw_FAIL),
NOTFINISHING = sum(pfw_W,pfw_IC),
PCT_PASS = round(PASSING/(PASSING+FAILING)*100),
PCT_FINISH = round(FINISHING/(FINISHING+NOTFINISHING)*100),
PCT_A = round(Grade_A/(PASSING+FAILING)*100)
)
d2_dum <- d2 %>%
fastDummies::dummy_cols() %>%
mutate(
Instructor_01  = forcats::as_factor(Instructor_01),
Instructor_02  = forcats::as_factor(Instructor_02),
Instructor_03  = forcats::as_factor(Instructor_03),
Instructor_04  = forcats::as_factor(Instructor_04),
Instructor_05  = forcats::as_factor(Instructor_05),
Instructor_06 =  forcats::as_factor(Instructor_06),
Instructor_07  = forcats::as_factor(Instructor_07),
Instructor_08  = forcats::as_factor(Instructor_08),
Instructor_09  = forcats::as_factor(Instructor_09),
Instructor_10  = forcats::as_factor(Instructor_10),
Instructor_11 =  forcats::as_factor(Instructor_11),
Instructor_12  = forcats::as_factor(Instructor_12),
Instructor_13  = forcats::as_factor(Instructor_13),
Instructor_14  = forcats::as_factor(Instructor_14),
Instructor_15  = forcats::as_factor(Instructor_15),
Instructor_16 =  forcats::as_factor(Instructor_16),
Instructor_17  = forcats::as_factor(Instructor_17),
Instructor_18  = forcats::as_factor(Instructor_18),
Term_20183     = forcats::as_factor(Term_20183),
Term_20193     = forcats::as_factor(Term_20193),
Term_20203     = forcats::as_factor(Term_20203),
ID_AGBU310  = forcats::as_factor(ID_AGBU310),
ID_AGBU402  = forcats::as_factor(ID_AGBU402),
ID_AGBU425  = forcats::as_factor(ID_AGBU425),
ID_AGSC211  = forcats::as_factor(ID_AGSC211),
ID_AGSC320  = forcats::as_factor(ID_AGSC320),
ID_AGSC411  = forcats::as_factor(ID_AGSC411),
ID_AGSC478  = forcats::as_factor(ID_AGSC478),
ID_AGSC516  = forcats::as_factor(ID_AGSC516),
ID_ANSC223  = forcats::as_factor(ID_ANSC223),
ID_ANSC224  = forcats::as_factor(ID_ANSC224),
ID_ANSC225  = forcats::as_factor(ID_ANSC225),
ID_ANSC230  = forcats::as_factor(ID_ANSC230),
ID_ANSC301  = forcats::as_factor(ID_ANSC301),
ID_ANSC315  = forcats::as_factor(ID_ANSC315),
ID_ANSC340  = forcats::as_factor(ID_ANSC340),
ID_ANSC409  = forcats::as_factor(ID_ANSC409),
ID_ANSC411  = forcats::as_factor(ID_ANSC411),
ID_ANSC425  = forcats::as_factor(ID_ANSC425),
ID_FOR111   = forcats::as_factor(ID_FOR111),
ID_FOR200   = forcats::as_factor(ID_FOR200),
ID_FOR230   = forcats::as_factor(ID_FOR230),
ID_FOR233   = forcats::as_factor(ID_FOR233),
ID_FOR302   = forcats::as_factor(ID_FOR302),
ID_FOR313   = forcats::as_factor(ID_FOR313),
ID_FOR402   = forcats::as_factor(ID_FOR402),
ID_FOR404   = forcats::as_factor(ID_FOR404),
ID_FOR420   = forcats::as_factor(ID_FOR420),
ID_FOR478   = forcats::as_factor(ID_FOR478),
ID_FOR480   = forcats::as_factor(ID_FOR480),
ID_GISC250  = forcats::as_factor(ID_GISC250),
ID_GISC260  = forcats::as_factor(ID_GISC260),
ID_PLSC101  = forcats::as_factor(ID_PLSC101),
ID_PLSC211  = forcats::as_factor(ID_PLSC211),
ID_PLSC284  = forcats::as_factor(ID_PLSC284),
ID_PLSC310  = forcats::as_factor(ID_PLSC310),
ID_PLSC311  = forcats::as_factor(ID_PLSC311),
ID_PLSC312  = forcats::as_factor(ID_PLSC312),
ID_PLSC400  = forcats::as_factor(ID_PLSC400),
ID_WILD314  = forcats::as_factor(ID_WILD314),
ID_WILD347  = forcats::as_factor(ID_WILD347)
)
finish_formula <-  PCT_FINISH ~ Term_20203 +    Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420 +ID_FOR480 +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
pass_formula <-  PCT_PASS ~ Term_20203 +    Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420 +ID_FOR480 +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
A_formula <-  PCT_A ~ Term_20203 +  Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420 +ID_FOR480 +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
finish_poisson <- glm(finish_formula, family = poisson(link = "identity"), data = d2_dum)
View(d2_dum)
d2 <- dat %>%
fastDummies::dummy_cols() %>%
group_by(Instructor,Term,ID,Upper)%>%
summarise(PASSING = sum(Grade_A,Grade_B,Grade_C,Grade_S),
FAILING = sum(Grade_D,Grade_F),
FINISHING = sum(pfw_PASS,pfw_FAIL),
NOTFINISHING = sum(pfw_W,pfw_IC),
PCT_PASS = round(PASSING/(PASSING+FAILING)*100),
PCT_FINISH = round(FINISHING/(FINISHING+NOTFINISHING)*100),
PCT_A = round(Grade_A/(PASSING+FAILING)*100)
)
d2_dum <- d2 %>%
fastDummies::dummy_cols() %>%
mutate(
Instructor_01  = forcats::as_factor(Instructor_01),
Instructor_02  = forcats::as_factor(Instructor_02),
Instructor_03  = forcats::as_factor(Instructor_03),
Instructor_04  = forcats::as_factor(Instructor_04),
Instructor_05  = forcats::as_factor(Instructor_05),
Instructor_06 =  forcats::as_factor(Instructor_06),
Instructor_07  = forcats::as_factor(Instructor_07),
Instructor_08  = forcats::as_factor(Instructor_08),
Instructor_09  = forcats::as_factor(Instructor_09),
Instructor_10  = forcats::as_factor(Instructor_10),
Instructor_11 =  forcats::as_factor(Instructor_11),
Instructor_12  = forcats::as_factor(Instructor_12),
Instructor_13  = forcats::as_factor(Instructor_13),
Instructor_14  = forcats::as_factor(Instructor_14),
Instructor_15  = forcats::as_factor(Instructor_15),
Instructor_16 =  forcats::as_factor(Instructor_16),
Instructor_17  = forcats::as_factor(Instructor_17),
Instructor_18  = forcats::as_factor(Instructor_18),
Term_20183     = forcats::as_factor(Term_20183),
Term_20193     = forcats::as_factor(Term_20193),
Term_20203     = forcats::as_factor(Term_20203),
ID_AGBU310  = forcats::as_factor(ID_AGBU310),
ID_AGBU402  = forcats::as_factor(ID_AGBU402),
ID_AGBU425  = forcats::as_factor(ID_AGBU425),
ID_AGSC211  = forcats::as_factor(ID_AGSC211),
ID_AGSC320  = forcats::as_factor(ID_AGSC320),
ID_AGSC411  = forcats::as_factor(ID_AGSC411),
ID_AGSC478  = forcats::as_factor(ID_AGSC478),
ID_AGSC516  = forcats::as_factor(ID_AGSC516),
ID_ANSC223  = forcats::as_factor(ID_ANSC223),
ID_ANSC224  = forcats::as_factor(ID_ANSC224),
ID_ANSC225  = forcats::as_factor(ID_ANSC225),
ID_ANSC230  = forcats::as_factor(ID_ANSC230),
ID_ANSC301  = forcats::as_factor(ID_ANSC301),
ID_ANSC315  = forcats::as_factor(ID_ANSC315),
ID_ANSC340  = forcats::as_factor(ID_ANSC340),
ID_ANSC409  = forcats::as_factor(ID_ANSC409),
ID_ANSC411  = forcats::as_factor(ID_ANSC411),
ID_ANSC425  = forcats::as_factor(ID_ANSC425),
ID_FOR111   = forcats::as_factor(ID_FOR111),
ID_FOR200   = forcats::as_factor(ID_FOR200),
ID_FOR230   = forcats::as_factor(ID_FOR230),
ID_FOR233   = forcats::as_factor(ID_FOR233),
ID_FOR302   = forcats::as_factor(ID_FOR302),
ID_FOR313   = forcats::as_factor(ID_FOR313),
ID_FOR402   = forcats::as_factor(ID_FOR402),
ID_FOR404   = forcats::as_factor(ID_FOR404),
ID_FOR420   = forcats::as_factor(ID_FOR420),
ID_FOR478   = forcats::as_factor(ID_FOR478),
ID_FOR480   = forcats::as_factor(ID_FOR480),
ID_GISC250  = forcats::as_factor(ID_GISC250),
ID_GISC260  = forcats::as_factor(ID_GISC260),
ID_PLSC101  = forcats::as_factor(ID_PLSC101),
ID_PLSC211  = forcats::as_factor(ID_PLSC211),
ID_PLSC284  = forcats::as_factor(ID_PLSC284),
ID_PLSC310  = forcats::as_factor(ID_PLSC310),
ID_PLSC311  = forcats::as_factor(ID_PLSC311),
ID_PLSC312  = forcats::as_factor(ID_PLSC312),
ID_PLSC400  = forcats::as_factor(ID_PLSC400),
ID_WILD314  = forcats::as_factor(ID_WILD314),
ID_WILD347  = forcats::as_factor(ID_WILD347)
)
finish_formula <-  PCT_FINISH ~ Term_20203 +    Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420  +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
pass_formula <-  PCT_PASS ~ Term_20203 +    Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420  +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
#+ID_FOR480
A_formula <-  PCT_A ~ Term_20203 +  Upper +
ID_AGBU310 + ID_AGBU402+ID_AGBU425+ID_AGSC320+ID_AGSC411+ID_AGSC516+ID_ANSC223+ID_ANSC224+ID_ANSC225+ID_ANSC230+ID_ANSC301+ID_ANSC340+ID_ANSC409+ID_ANSC411+ID_FOR111 +ID_FOR200 +ID_FOR230 +ID_FOR233 +ID_FOR302 +ID_FOR313 +ID_FOR402 +ID_FOR404 +ID_FOR420  +ID_GISC250+ID_GISC260+ID_PLSC101+ID_PLSC284+ID_PLSC310+ID_PLSC312+ID_PLSC400+ID_WILD314
finish_poisson <- glm(finish_formula, family = poisson(link = "identity"), data = d2_dum)
#summary(finish_poisson)
fp <- coeftest(finish_poisson, vcov = vcovHC(finish_poisson, type="HC1"))
pass_poisson <- glm(pass_formula, family = poisson(link = "identity"), data = d2_dum)
pp <- coeftest(pass_poisson, vcov = vcovHC(pass_poisson, type="HC1"))
#summary(pass_poisson)
a_poisson <- glm(A_formula, family = poisson(link = "identity"), data = d2_dum)
pa <- coeftest(a_poisson, vcov = vcovHC(a_poisson, type="HC1"))
stargazer(pp,fp,pa, title = "Poisson Regression Results", align = TRUE, out = 'result.html', no.space=TRUE, single.row=TRUE,
column.labels=c("Percent Passing","Percent Finishing","Percent Earning A"), model.numbers=FALSE)
ggFinish <- ggpredict(finish_poisson,   "Term_20203")
pggFinish <- plot(ggFinish) +
xlab('Spring 2020 Dummy') +
ylab('Percent Finishing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggPass <- ggpredict(pass_poisson, terms = "Term_20203")
pggPass <- plot(ggPass) +
xlab('Spring 2020 Dummy') +
ylab('Percent Passing') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
ggA <- ggpredict(a_poisson, terms = "Term_20203")
pggA <- plot(ggA) +
xlab('Spring 2020 Dummy') +
ylab('Percent Earning A') +
ggtitle('')+
cowplot::theme_cowplot(font_size = 12)
cowplot::plot_grid(pggFinish,pggPass,pggA, labels = c('A','B','C'))
View(d2_dum)
env.profile()
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
sessionInfo()
