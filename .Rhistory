ylab('Predicted Percent \nEarning A') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
hist_A_v <- ggplot(d3_dum, aes(x=Term, y=PCT_A)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_A_v)
hist_A_indiv <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_A, group =   interaction(UPPER,ID)))+
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent Earning A') +
ggtitle('') +
theme(legend.position="none")+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
geom_point() +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_PASS_v <- ggplot(d3_dum, aes(x=Term, y=PCT_PASS)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent Passing') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_PASS_v)
hist_PASS <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_PASS,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent Passing') +
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH_v <- ggplot(d3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent Finishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent Finishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
predict <- cowplot::plot_grid(predict_Finish,predict_Pass,predict_A,
labels = c("A. Predicted Percent Finishing",
"B. Predicted Percent Passing",
"C. Predicted Percent Earning an A"), label_size = 12,
hjust = 0, ncol = 1)
save_plot('predict.png',plot= predict, base_height = 7, base_width = 3.375)
hist_A_v <- ggplot(d3_dum, aes(x=Term, y=PCT_A)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_A_v)
hist_A_indiv <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_A, group =   interaction(UPPER,ID)))+
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
ggtitle('') +
theme(legend.position="none")+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
geom_point() +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_PASS_v <- ggplot(d3_dum, aes(x=Term, y=PCT_PASS)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_PASS_v)
hist_PASS <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_PASS,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH_v <- ggplot(d3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
predict <- cowplot::plot_grid(predict_Finish,predict_Pass,predict_A,
labels = c("A. Predicted Percent Finishing",
"B. Predicted Percent Passing",
"C. Predicted Percent Earning an A"), label_size = 12,
hjust = 0, ncol = 1)
save_plot('predict.png',plot= predict, base_height = 7, base_width = 3.375)
violin <- cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"), label_size = 12,
hjust = 0,  ncol = 1)
save_plot('violin.png',plot= violin, base_height = 8, base_width = 3.375)
save_plot('violin.png',plot= violin, base_height = 7, base_width = 3.375)
violin <- cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"), label_size = 10,
hjust = 0,  ncol = 1)
save_plot('violin.png',plot= violin, base_height = 7, base_width = 3.375)
predict_A <- plot(ggA,add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nEarning A') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
hist_A_v <- ggplot(d3_dum, aes(x=Term, y=PCT_A)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
hist_A_indiv <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_A, group =   interaction(UPPER,ID)))+
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
ggtitle('') +
theme(legend.position="none")+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
geom_point() +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_PASS_v <- ggplot(d3_dum, aes(x=Term, y=PCT_PASS)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_PASS_v)
hist_PASS <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_PASS,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH_v <- ggplot(d3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
save_plot('predict.png',plot= predict, base_height = 7, base_width = 3.375)
save_plot('hist.png',plot= hist, base_height = 7, base_width = 8.75)
hist <- cowplot::plot_grid(hist_FINISH,hist_PASS,hist_A_indiv,
labels = c("A. Slope of Historic Percent Finishing",
"B. Slope of Historic Percent Passing",
"C. Slope of Historic Percent Earning an A"), label_size = 10,
hjust = -0.2, ncol = 1)
save_plot('hist.png',plot= hist, base_height = 7, base_width = 8.75)
save_plot('hist.png',plot= hist, base_height = 9, base_width = 8.75)
save_plot('hist.png',plot= hist, base_height = 10, base_width = 8.75)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
library(flextable)
library(officer)
library(censReg)
library(ggpubr)
library(AER)
library(jtools)
library(robust)
library(ggrepel)
set.seed(4798)
dat <- read_excel("Agriculture and Forestry Grades by Instructor and Course - Summer 2017 thru Spring 2020.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
dat$Instructor <- dat$Instructor %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
#dat <- dat %>%
#  filter(ID != "FOR480")
#tidy(finish_Tobit)
#stargazer(finish_Tobit, se=list(NULL, fTse),pass_Tobit,se=list(NULL,sqrt(diag(vcovCL(pass_Tobit, cluster=rownames(d3_dum), type="HC0")))), omit.stat = "f",title = "", align = TRUE, out = 'result.html', no.space=TRUE, single.row=TRUE,model.numbers=FALSE)
stargazer(pp,fp,pa, title = "", align = TRUE, out = 'result.html', no.space=TRUE, single.row=TRUE,
column.labels=c("Percent Passing","Percent Finishing","Percent Earning A"), model.numbers=FALSE)
#stargazer(pass_Tobit,finish_Tobit,a_Tobit, title = "Tobit Regression Results", align = TRUE, out = 'result.html', no.space=TRUE, single.row=TRUE,column.labels=c("Percent Passing","Percent Finishing","Percent Earning A"), model.numbers=FALSE)
`%notin%` <- Negate(`%in%`)
percent_grade <- dat %>%
count(Term, Grade) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup()
percent_pfw <- dat %>%
count(Term, pfw) %>%
group_by(Term) %>%
mutate(Percent = n / sum(n) * 100) %>%
ungroup() %>%
filter(pfw == "PASS" | pfw == "FAIL" | pfw == "W")
p <- percent_grade %>%
add_case(Term = "20193",Grade = "S",n= 0,Percent = 0)%>%
add_case(Term = "20183",Grade = "IC",n= 0,Percent = 0)%>%
add_case(Term = "20193",Grade = "IC",n= 0,Percent = 0)%>%
ggplot(aes(x = Grade, y = Percent, fill = Term)) +
geom_bar(stat = "identity", position = position_dodge(width = .9), width = .8)+
ggsci::scale_fill_npg(name = "Term", labels = c("2018", "2019", "2020")) +
geom_text(aes(label = round(Percent,1)), position = position_dodge(width = .9), vjust = 0.2, hjust = -0.1, size = 3,angle = 90) +
scale_y_continuous(expand = c(0.1, .1))
pfwplot <- ggplot(percent_pfw, aes(x = pfw, y= Percent, fill = Term)) +
geom_bar(stat = "identity", position = position_dodge(width = .9), width = .8) +
scale_x_discrete(labels=c("PASS" = "PASS \n(A, B, OR C)", "FAIL" = "FAIL \n(D OR F)", "W" = "W"))+
ggsci::scale_fill_npg(name = "Term", labels = c("2018", "2019", "2020")) +
geom_text(aes(label = round(Percent,1)), position = position_dodge(width = .9), vjust = 0.2, hjust = -0.1, size = 3,angle = 90) +
scale_y_continuous(expand = c(0.1, .1))+
xlab("Outcome")
ggarrange(p,pfwplot,widths = c(2, 1),align = 'h',  common.legend = TRUE, labels = "AUTO")  #%>%
#ggexport(filename = "lettersandpassfail.png",
#width = 640,
#height = 480)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
library(readxl)
library("scales")
library("stringr")
library("ggthemes")
library(cowplot)
library(knitr)
library(kableExtra)
require(nnet)
library(stargazer)
library(lmtest)
library(sandwich)
library(tidyverse)
library(ggeffects)
library(flextable)
library(officer)
library(censReg)
library(ggpubr)
library(AER)
library(jtools)
library(robust)
library(ggrepel)
`%notin%` <- Negate(`%in%`)
set.seed(4798)
dat <- read_excel("Agriculture and Forestry Grades by Instructor and Course - Summer 2017 thru Spring 2020.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
dat$Instructor <- dat$Instructor %>% fct_anon()
dat$pfw <- fct_recode(dat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
#dat <- dat %>%
#  filter(ID != "FOR480")
ggFinish <- ggpredict(finish_poisson,  "Term_20203")
predict_Finish <- plot(ggFinish, add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nFinishing') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
ggPass <- ggpredict(pass_poisson, terms = "Term_20203")
predict_Pass <- plot(ggPass, add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nPassing') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
ggA <- ggpredict(a_poisson, terms = "Term_20203")
predict_A <- plot(ggA,add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nEarning A') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
hist_A_v <- ggplot(d3_dum, aes(x=Term, y=PCT_A)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",
"20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_A_v)
hist_A_indiv <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_A, group =   interaction(UPPER,ID)))+
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
ggtitle('') +
theme(legend.position="none")+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
geom_point() +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_PASS_v <- ggplot(d3_dum, aes(x=Term, y=PCT_PASS)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19","20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_PASS_v)
hist_PASS <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_PASS,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",  "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH_v <- ggplot(d3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH <-  d3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
predict <- cowplot::plot_grid(predict_Finish,predict_Pass,predict_A,
labels = c("A. Predicted Percent Finishing",
"B. Predicted Percent Passing",
"C. Predicted Percent Earning an A"),
label_size = 10, hjust = 0, ncol = 1)
predict
#save_plot('predict.png',plot= predict, base_height = 7, base_width = 3.375)
violin <- cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 1)
violin
#save_plot('violin.png',plot= violin, base_height = 7, base_width = 3.375)
hist <- cowplot::plot_grid(hist_FINISH,hist_PASS,hist_A_indiv,
labels = c("A. Slope of Historic Percent Finishing",
"B. Slope of Historic Percent Passing",
"C. Slope of Historic Percent Earning an A"),
label_size = 10, hjust = -0.2, ncol = 1)
hist
#save_plot('hist.png',plot= hist, base_height = 10, base_width = 8.75)
histAndResult <- plot_grid(predict,violin,hist,nrow = 1, rel_widths = c(.3,.3,1))
histAndResult
#save_plot('histAndResult.png',plot= histAndResult, base_height = 13, base_width = 18)
plotly::ggplotly(predict_Finish)
plotly::ggplotly(ggFinish)
hist_A_indiv
plotly::ggplotly(hist_FINISH_v)
plotly::ggplotly(hist_PASS)
save_plot('~\results\histAndResult.png',plot= histAndResult, base_height = 13, base_width = 18)
save_plot('~/results/histAndResult.png',plot= histAndResult, base_height = 13, base_width = 18)
histAndResult
# Figs 2-4 Combined
histAndResult <- plot_grid(predict,violin,hist,nrow = 1, rel_widths = c(.3,.3,1))
save_plot('~/results/histAndResult.png',plot= histAndResult, base_height = 13, base_width = 18)
setwd("~/Documents/GitHub/COVID_Grades")
save_plot('~/results/histAndResult.png',plot= histAndResult, base_height = 13, base_width = 18)
